plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.mauricio.dogapichallenger"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0.2"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField "String", "API_KEY", "\"a0b9bb5b-a85d-4b4b-ae7c-3b70161e0530\""
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        dataBinding = true
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    hilt {
        enableTransformForLocalTests = true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation 'androidx.test:core-ktx:1.4.0'

    // Tests
    androidTestImplementation "androidx.arch.core:core-testing:$versions.android_core_testing_version"
    testImplementation "androidx.arch.core:core-testing:$versions.android_core_testing_version"
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    testImplementation "org.mockito:mockito-core:2.28.2"
    testImplementation 'org.mockito:mockito-inline:3.7.7'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.0'
    testImplementation "org.robolectric:robolectric:4.4"

    // RecyclerView
    implementation "androidx.recyclerview:recyclerview:$versions.recyclerview_version"

    // LiveCycle
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle_version"

    // Navigation UI
    implementation "androidx.navigation:navigation-fragment-ktx:$versions.navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$versions.navigation_version"

    // Retrofit 2
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$versions.okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttp_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutine_version"

    // JSON Parsing
    implementation "com.google.code.gson:gson:$versions.gson_version"

    // Hilt
    implementation "com.google.dagger:hilt-android:$versions.hilt_version"
    kapt "com.google.dagger:hilt-compiler:$versions.hilt_version"
    kapt "androidx.hilt:hilt-compiler:1.0.0"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"

    // For local unit tests
    testImplementation "com.google.dagger:hilt-android-testing:$versions.hilt_version"
    kaptTest "com.google.dagger:hilt-compiler:$versions.hilt_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$versions.glide_version"
    kapt "com.github.bumptech.glide:compiler:$versions.glide_version"

    def roomVersion = "2.4.0"
    implementation("androidx.room:room-runtime:$roomVersion")
    annotationProcessor("androidx.room:room-compiler:$roomVersion")

    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:$roomVersion")
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$roomVersion")

}